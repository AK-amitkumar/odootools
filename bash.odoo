alias alldbs='`su postgres -c "psql -At -c \"select datname from pg_database where datistemplate = false and 'postgres' <> datname;\" postgres"`'
alias odootail='sudo tail -f /var/log/odoo/odoo-server.log'
alias odoovilog='sudo vi /var/log/odoo/odoo-server.log'
alias odooadminpw='grep admin_passwd /etc/odoo/openerp-server.conf | cut -f 3 -d" "'

alias allprojects='ls -d /usr/share/odoo-*'
alias cdo='cd /usr/share/odoo-addons'
alias cda='cd /etc/apache2/sites-available'
function _cdprojectdir() {
	[ -z $1 ] || ODOOPROJECT=$1
	cd /usr/share/$ODOOPROJECT
}
alias cdp='_cdprojectdir'

function _dirname() {
	$DIR=`dirname $1`
	$BASE=`basename $DIR`
	echo -n $BASE + ","
}

function list_all_smart_modules() {
	for MODULE in $(ls /usr/share/odoo-smart/*/__openerp__.py)
	do
		_dirname $MODULE
	done
}

function _odoo_smart_update() {
	sudo service odoo stop
	MODULES="smart_account,smart_activity,smart_cash,smart_client,smart_common,smart_dashboard,smart_expense,smart_login,smart_mc,smart_mc_account,smart_mc_hr,smart_order,smart_project,smart_salary_simulator"
	sudo su odoo -c "odoo.py -c /etc/odoo/openerp-server.conf --database $1 --update \"$MODULES\" --stop-after-init"
	sudo service odoo start
}
alias odooupd='_odoo_smart_update'
function _odoo_smart_update_module() {
	sudo service odoo stop
	sudo su odoo -c "odoo.py -c /etc/odoo/openerp-server.conf --database $1 --update $2 --stop-after-init"
	sudo service odoo start
}
alias odooupdm='_odoo_smart_update_module'

function _odoo_restart() {
        if [ -f /etc/odoo/odoo.tools ]
        then
                . /etc/odoo/odoo.tools
        fi
        if [ -z "$ODOORESTART" ]
        then
                 ODOORESTART="sudo service odoo restart"
        fi
        echo $ODOORESTART
        $ODOORESTART
}
alias odoorestart='_odoo_restart'


function _odoo_update_module() {
        usage() { echo "Usage: $0 [-d <database>] [-m <module>]" 1>&2; exit 1; }
        [ -f /etc/odoo/odoo.tools ] && . /etc/odoo/odoo.tools

        while getopts ":m:d:" option; do
                case "${option}" in
                d|db) DATABASES=${OPTARG} ; echo "DB: $option $OPTARG" ;;
                m|module) MODULES=${OPTARG} ;;
                \:) echo "Option $option requires an argument" ; return ;;
                \?) echo "Illegal argument ${option}::${OPTARG}" ; return ;;
                esac
        done
        echo "For databases=${DATABASES} modules=${MODULES}"
return
        sudo service odoo stop
        for DATABASE in $DATABASES
        do
                for MODULE in $MODULES
                do
                        echo "database ${DATABASE} module ${MODULE}"
                        sudo su odoo -c "odoo.py -c /etc/odoo/openerp-server.conf --database $DATABASE --update $MODULE --stop-after-init"
                done
        done
        sudo service odoo start
}
alias odooupd='_odoo_update_module'

function _odoocreatedb() {
	sql "create database $1;"
 	sql "grant usage on $1.* to ${1:0:16}@localhost identified by '$2';"
	sql "grant all privileges on $1.* to ${1:0:16}@localhost;"
}
alias odoocreatedb='_odooccreatedb'

function _odoofind() {
	 find -L /usr/share/odoo-addons -type f -exec grep -Hn $1 {} \;
}
alias odoofind='_odoofind'

function _odoogitclone() {
    ODOOPROJECT=$1
    CWD=`pwd`
    sudo mkdir -p --mode=g+w /usr/share/$1
    sudo chown odoo:aw /usr/share/$1
    cd /usr/share
    git clone https://github.com/vertelab/$1.git
    cd $CWD
}
alias odoogitclone='_odoogitclone'
function _odoosync() {
    usage() { echo "Usage: $0 [-p <project>] [-h <host>]" 1>&2; exit 1; }
    [ -f /etc/odoo/odoo.tools ] && . /etc/odoo/odoo.tools

        while getopts ":p:h:" option; do
           case $option in
                p) ODOOPROJECT=${OPTARG} ; echo "Project: $option $OPTARG" ;;
                h) HOST=${OPTARG} ; echo "Host: $option $OPTARG" ;;
                \:) echo "Option $option requires an argument" ; return ;;
                \?) echo "Illegal argument ${option}::${OPTARG}" ; return ;;
            esac
        done

    CWD=`pwd`
    cd /usr/share
    rsync -var --exclude='.git/' /usr/share/$ODOOPROJECT $HOST:/usr/share/
    cd $CWD
}
alias odoosync='_odoosync'
